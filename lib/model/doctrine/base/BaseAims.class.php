<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Aims', 'doctrine');

/**
 * BaseAims
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $aim
 * @property string $sigla
 * @property integer $presidente_id
 * @property Doctrine_Collection $AimsAdmin
 * @property Doctrine_Collection $Distritos
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getAim()           Returns the current record's "aim" value
 * @method string              getSigla()         Returns the current record's "sigla" value
 * @method integer             getPresidenteId()  Returns the current record's "presidente_id" value
 * @method Doctrine_Collection getAimsAdmin()     Returns the current record's "AimsAdmin" collection
 * @method Doctrine_Collection getDistritos()     Returns the current record's "Distritos" collection
 * @method sfGuardUser         getSfGuardUser()   Returns the current record's "sfGuardUser" value
 * @method Aims                setId()            Sets the current record's "id" value
 * @method Aims                setAim()           Sets the current record's "aim" value
 * @method Aims                setSigla()         Sets the current record's "sigla" value
 * @method Aims                setPresidenteId()  Sets the current record's "presidente_id" value
 * @method Aims                setAimsAdmin()     Sets the current record's "AimsAdmin" collection
 * @method Aims                setDistritos()     Sets the current record's "Distritos" collection
 * @method Aims                setSfGuardUser()   Sets the current record's "sfGuardUser" value
 * 
 * @package    Sistema de Gestion - Rotaract Rotary e Interact
 * @subpackage model
 * @author     Gaspar Zaragoza
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAims extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('aims');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('aim', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sigla', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('presidente_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AimsAdmin', array(
             'local' => 'id',
             'foreign' => 'aim_id'));

        $this->hasMany('Distritos', array(
             'local' => 'id',
             'foreign' => 'aim_id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'presidente_id',
             'foreign' => 'id'));
    }
}